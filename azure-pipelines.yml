# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

variables:
  GLOBAL_OUTPUT: $(ChangeApproval)

jobs:
  - job: ServiceNowChangeRecord
    displayName: 'Change Approval'
    pool:
      name: Server
    variables:
      startDate: $[format('{0:yyyy}-{0:MM}-{0:dd} {0:HH}:{0:mm}:{0:ss}', pipeline.startTime)]
    steps:
      - task: ServiceNow-DevOps-Server-Change-Acceleration@1
        inputs:
          connectedServiceName: 'dev201230-ARMS-ServiceNow DevOps Service Connection'
          changeRequestDetails: |
            {
              "autoCloseChange": true,
              "attributes": {
                "requested_by": {
                  "name": "DevOps Integration User"
                },
                "assignment_group": {
                  "name": "ARMS Support"
                },
                "chg_model": {
                  "name": "DevOps"
                },
                "category": "Service",
                "devops_change": true,
                "business_service": {
                  "name": "ARMS"
                },
                "service_offering": {
                  "name": "Offering"
                },
                "cmdb_ci": {
                  "name": "ARMS"
                },
                "type": "Normal",
                "priority": "2",
                "comments": "This is a sample pipeline script to be added in your change step",
                "work_notes": "Update this to work_notes",
                "start_date": "$(startDate)"
              }
            }
          applicationName: 'ARMS'
        name: 'ChangeApproval'
  - job: nodeDev
    displayName: 'Install Node.js'
    dependsOn:
    - ServiceNowChangeRecord
    condition: succeeded()
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: NodeTool@0
        inputs:
          versionSource: 'spec'
          versionSpec: '10.x'
          checkLatest: true
      - task: CmdLine@2
        inputs:
          script: |
            npm build
            npm install
      - bash: |
          echo $(MAPPED_OUTPUT)
        env:
          MAPPED_OUTPUT: $(ChangeApproval)